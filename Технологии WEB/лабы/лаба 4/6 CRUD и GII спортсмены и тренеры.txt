я создаю CRUD интерфейс для своих таблиц при помощи gii из фреймворка yii2.

у меня есть таблица - Sportsmen_treners - с полями id, id_sportsmen, id_treners
поле id_sportsmen связано с полем id, таблица sportsmen. 
поле id_treners связано с полем id, таблица treners.
необходимо изменить внешние ключи на данные из связанных таблиц.

после этого, обьясни мне как делать замену дочерних полей на значечния из родительской таблицы

SportsmenTrenersController
```
<?php

namespace app\modules\admin\controllers;

use app\models\SportsmenTreners;
use app\modules\admin\models\SportsmenTrenersSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * SportsmenTrenersController implements the CRUD actions for SportsmenTreners model.
 */
class SportsmenTrenersController extends Controller
{
    /**
     * @inheritDoc
     */
    public function behaviors()
    {
        return array_merge(
            parent::behaviors(),
            [
                'verbs' => [
                    'class' => VerbFilter::className(),
                    'actions' => [
                        'delete' => ['POST'],
                    ],
                ],
            ]
        );
    }

    /**
     * Lists all SportsmenTreners models.
     *
     * @return string
     */
    public function actionIndex()
    {
        $searchModel = new SportsmenTrenersSearch();
        $dataProvider = $searchModel->search($this->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single SportsmenTreners model.
     * @param int $id
     * @return string
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new SportsmenTreners model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return string|\yii\web\Response
     */
    public function actionCreate()
    {
        $model = new SportsmenTreners();

        if ($this->request->isPost) {
            if ($model->load($this->request->post()) && $model->save()) {
                return $this->redirect(['view', 'id' => $model->id]);
            }
        } else {
            $model->loadDefaultValues();
        }

        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing SportsmenTreners model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param int $id
     * @return string|\yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing SportsmenTreners model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param int $id
     * @return \yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the SportsmenTreners model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param int $id
     * @return SportsmenTreners the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = SportsmenTreners::findOne(['id' => $id])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}

```
SportsmenTrenersSearch
```
<?php

namespace app\modules\admin\models;

use yii\base\Model;
use yii\data\ActiveDataProvider;
use app\models\SportsmenTreners;

/**
 * SportsmenTrenersSearch represents the model behind the search form of `app\models\SportsmenTreners`.
 */
class SportsmenTrenersSearch extends SportsmenTreners
{
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id', 'id_sportsmen', 'id_treners'], 'integer'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = SportsmenTreners::find();

        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
            'id_sportsmen' => $this->id_sportsmen,
            'id_treners' => $this->id_treners,
        ]);

        return $dataProvider;
    }
}

```
index.php
```
<?php

use app\models\SportsmenTreners;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\grid\ActionColumn;
use yii\grid\GridView;

/** @var yii\web\View $this */
/** @var app\modules\admin\models\SportsmenTrenersSearch $searchModel */
/** @var yii\data\ActiveDataProvider $dataProvider */

$this->title = 'Таблица Спортсмены & Тренеры';
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="sportsmen-treners-index">

    <h1><?= Html::encode($this->title) ?></h1>

    <p>
        <?= Html::a('Создать запись', ['create'], ['class' => 'btn btn-success']) ?>
    </p>

    <?php // echo $this->render('_search', ['model' => $searchModel]); 
    ?>

    <?= GridView::widget([
        'dataProvider' => $dataProvider,
        'filterModel' => $searchModel,
        'columns' => [
            ['class' => 'yii\grid\SerialColumn'],

            [
                'attribute' => 'id_sportsmen',
                'value' => function ($model) {
                    return $model->sportsmen ? $model->sportsmen->name : 'Не указано';
                },
            ],
            [
                'attribute' => 'id_treners',
                'value' => function ($model) {
                    return $model->sportsmen ? $model->treners->name : 'Не указано';
                },
            ],
            [
                'class' => ActionColumn::className(),
                'urlCreator' => function ($action, SportsmenTreners $model, $key, $index, $column) {
                    return Url::toRoute([$action, 'id' => $model->id]);
                }
            ],
        ],
    ]); ?>


</div>
```
create.php:
```
<?php

use yii\helpers\Html;

/** @var yii\web\View $this */
/** @var app\models\SportsmenTreners $model */

$this->title = 'Создать запись';
$this->params['breadcrumbs'][] = ['label' => 'Таблица Спортсмены & Тренеры', 'url' => ['index']];
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="sportsmen-treners-create">

    <h1><?= Html::encode($this->title) ?></h1>

    <?= $this->render('_form', [
        'model' => $model,
    ]) ?>

</div>


```
update.php:
```
<?php

use yii\helpers\Html;

/** @var yii\web\View $this */
/** @var app\models\SportsmenTreners $model */

$this->title = 'Обновить запись: ' . $model->sportsmen->name;
$this->params['breadcrumbs'][] = ['label' => 'Таблица Спортсмены & Тренеры', 'url' => ['index']];
$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
$this->params['breadcrumbs'][] = 'Update';
?>
<div class="sportsmen-treners-update">

    <h1><?= Html::encode($this->title) ?></h1>

    <?= $this->render('_form', [
        'model' => $model,
    ]) ?>

</div>


```
view.php
```
<?php

use yii\helpers\Html;
use yii\widgets\DetailView;

/** @var yii\web\View $this */
/** @var app\models\SportsmenTreners $model */

$this->title = $model->sportsmen->name;
$this->params['breadcrumbs'][] = ['label' => 'Таблица Спортсмены & Тренеры', 'url' => ['index']];
$this->params['breadcrumbs'][] = $this->title;
\yii\web\YiiAsset::register($this);
?>
<div class="sportsmen-treners-view">

    <h1><?= Html::encode($this->title) ?></h1>

    <p>
        <?= Html::a('Обновить', ['update', 'id' => $model->id], ['class' => 'btn btn-primary']) ?>
        <?= Html::a('Удалить', ['delete', 'id' => $model->id], [
            'class' => 'btn btn-danger',
            'data' => [
                'confirm' => 'Are you sure you want to delete this item?',
                'method' => 'post',
            ],
        ]) ?>
    </p>

    <?= DetailView::widget([
        'model' => $model,
        'attributes' => [
            [
                'attribute' => 'id_sportsmen',
                'value' => function ($model) {
                    return $model->sportsmen ? $model->sportsmen->name : 'Не указано';
                },
            ],
            [
                'attribute' => 'id_treners',
                'value' => function ($model) {
                    return $model->treners ? $model->treners->name : 'Не указано';
                },
            ],
        ],
    ]) ?>

</div>

```

_search.php:
```
<?php

use yii\helpers\Html;
use yii\widgets\ActiveForm;
use app\models\Sportsmen;
use app\models\Treners;

/** @var yii\web\View $this */
/** @var app\modules\admin\models\SportsmenTrenersSearch $model */
/** @var yii\widgets\ActiveForm $form */
?>

<div class="sportsmen-treners-search">

    <?php $form = ActiveForm::begin([
        'action' => ['index'],
        'method' => 'get',
    ]); ?>

<?= $form->field($model, 'id_sportsmen')->dropDownList(
    \yii\helpers\ArrayHelper::map(Sportsmen::find()->all(), 'id', 'name'), // замените 'name' на реальное имя поля
    ['prompt' => 'Выберите спортсмена']
) ?>

<?= $form->field($model, 'id_treners')->dropDownList(
    \yii\helpers\ArrayHelper::map(Treners::find()->all(), 'id', 'name'), // замените 'name' на реальное имя поля
    ['prompt' => 'Выберите тренера']
) ?>


    <div class="form-group">
        <?= Html::submitButton('Search', ['class' => 'btn btn-primary']) ?>
        <?= Html::resetButton('Reset', ['class' => 'btn btn-outline-secondary']) ?>
    </div>

    <?php ActiveForm::end(); ?>

</div>

```
_form.php:
```
<?php

use yii\helpers\Html;
use yii\widgets\ActiveForm;
use app\models\Sportsmen;
use app\models\Treners;

/** @var yii\web\View $this */
/** @var app\models\SportsmenTreners $model */
/** @var yii\widgets\ActiveForm $form */
?>

<div class="sportsmen-treners-form">

    <?php $form = ActiveForm::begin(); ?>

    <?= $form->field($model, 'id_sportsmen')->dropDownList(
        \yii\helpers\ArrayHelper::map(Sportsmen::find()->all(), 'id', 'name'), // замените 'name' на реальное имя поля
        ['prompt' => 'Выберите спортсмена']
    ) ?>

    <?= $form->field($model, 'id_treners')->dropDownList(
        \yii\helpers\ArrayHelper::map(Treners::find()->all(), 'id', 'name'), // замените 'name' на реальное имя поля
        ['prompt' => 'Выберите тренера']
    ) ?>


    <div class="form-group">
        <?= Html::submitButton('Сохранить', ['class' => 'btn btn-success']) ?>
    </div>

    <?php ActiveForm::end(); ?>

</div>
```