я создаю CRUD интерфейс для своих таблиц при помощи gii из фреймворка yii2.

у меня есть таблица - Sportsmen - с полями id, name, razryad, id_sport_club
поле id_sport_club связано с полем id, таблица sport_club. 
необходимо изменить внешние ключи на данные из связанных таблиц.
и необходимо убрать поле id со всех страниц, что бы их не было видно.
необходимо перевести все надписи на русский.

на страницах создания и редактирования записей нету поля name из тыблицы sportsmen 
и поля спортивный клуб. поле спортивный клуб должен быть выпадающим списком 
со значениями из таблицы sport_club, поле name

SportsmenController.php:
```
<?php

namespace app\modules\admin\controllers;

use app\models\Sportsmen;
use app\modules\admin\models\SportsmenSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * SportsmenController implements the CRUD actions for Sportsmen model.
 */
class SportsmenController extends Controller
{
    /**
     * @inheritDoc
     */
    public function behaviors()
    {
        return array_merge(
            parent::behaviors(),
            [
                'verbs' => [
                    'class' => VerbFilter::class,
                    'actions' => [
                        'delete' => ['POST'],
                    ],
                ],
            ]
        );
    }

    /**
     * Lists all Sportsmen models.
     *
     * @return string
     */
    public function actionIndex()
    {
        $searchModel = new SportsmenSearch();
        $dataProvider = $searchModel->search($this->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Sportsmen model.
     * @param int $id Спортсмены
     * @return string
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Sportsmen model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return string|\yii\web\Response
     */
    public function actionCreate()
    {
        $model = new Sportsmen();

        if ($this->request->isPost) {
            if ($model->load($this->request->post()) && $model->save()) {
                return $this->redirect(['view', 'id' => $model->id]);
            }
        } else {
            $model->loadDefaultValues();
        }

        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing Sportsmen model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param int $id Спортсмены
     * @return string|\yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing Sportsmen model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param int $id Спортсмены
     * @return \yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Sportsmen model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param int $id Спортсмены
     * @return Sportsmen the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Sportsmen::findOne(['id' => $id])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
```
index.php:
```
<?php

use app\models\Sportsmen;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\grid\ActionColumn;
use yii\grid\GridView;

/** @var yii\web\View $this */
/** @var app\modules\admin\models\SportsmenSearch $searchModel */
/** @var yii\data\ActiveDataProvider $dataProvider */

$this->title = 'Спортсмены';
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="sportsmen-index">

    <h1><?= Html::encode($this->title) ?></h1>

    <p>
        <?= Html::a('Создать спортсмена', ['create'], ['class' => 'btn btn-success']) ?>
    </p>

    <?= GridView::widget([
        'dataProvider' => $dataProvider,
        'filterModel' => $searchModel,
        'columns' => [
            ['class' => 'yii\grid\SerialColumn'],

            'name',
            'razryad',
            [
                'attribute' => 'id_sport_club',
                'label' => 'Спортивный клуб',
                'value' => function ($model) {
                    return $model->sportClub ? $model->sportClub->name : 'Нет клуба';
                },
            ],
            [
                'class' => ActionColumn::class,
                'urlCreator' => function ($action, Sportsmen $model, $key, $index, $column) {
                    return Url::toRoute([$action, 'id' => $model->id]);
                }
            ],
        ],
    ]); ?>

</div>
```
create.php:
```
<?php

use yii\helpers\Html;

/** @var yii\web\View $this */
/** @var app\models\Sportsmen $model */

$this->title = 'Создать спортсмена';
$this->params['breadcrumbs'][] = ['label' => 'Спортсмены', 'url' => ['index']];
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="sportsmen-create">

    <h1><?= Html::encode($this->title) ?></h1>

    <?= $this->render('_form', [
        'model' => $model,
    ]) ?>

</div>
```
update.php:
```
<?php

use yii\helpers\Html;

/** @var yii\web\View $this */
/** @var app\models\Sportsmen $model */

$this->title = 'Обновить спортсмена: ' . $model->name;
$this->params['breadcrumbs'][] = ['label' => 'Спортсмены', 'url' => ['index']];
$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
$this->params['breadcrumbs'][] = 'Обновить';
?>
<div class="sportsmen-update">

    <h1><?= Html::encode($this->title) ?></h1>

    <?= $this->render('_form', [
        'model' => $model,
    ]) ?>

</div>
```
view.php:
```
<?php

use yii\helpers\Html;
use yii\widgets\DetailView;

/** @var yii\web\View $this */
/** @var app\models\Sportsmen $model */

$this->title = $model->name;
$this->params['breadcrumbs'][] = ['label' => 'Спортсмены', 'url' => ['index']];
$this->params['breadcrumbs'][] = $this->title;
\yii\web\YiiAsset::register($this);
?>
<div class="sportsmen-view">

    <h1><?= Html::encode($this->title) ?></h1>

    <p>
        <?= Html::a('Обновить', ['update', 'id' => $model->id], ['class' => 'btn btn-primary']) ?>
        <?= Html::a('Удалить', ['delete', 'id' => $model->id], [
            'class' => 'btn btn-danger',
            'data' => [
                'confirm' => 'Вы уверены, что хотите удалить этот элемент?',
                'method' => 'post',
            ],
        ]) ?>
    </p>

    <?= DetailView::widget([
        'model' => $model,
        'attributes' => [
            'name',
            'razryad',
            [
                'attribute' => 'id_sport_club',
                'label' => 'Спортивный клуб',
                'value' => function ($model) {
                    return $model->sportClub ? $model->sportClub->name : 'Нет клуба';
                },
            ],
        ],
    ]) ?>

</div>
```
_search.php:
```
<?php

use yii\helpers\Html;
use yii\widgets\ActiveForm;
use app\models\SportClub;

/** @var yii\web\View $this */
/** @var app\modules\admin\models\SportsmenSearch $model */
/** @var yii\widgets\ActiveForm $form */
?>

<div class="sportsmen-search">

    <?php $form = ActiveForm::begin([
        'action' => ['index'],
        'method' => 'get',
    ]); ?>

    <?= $form->field($model, 'name')->textInput(['placeholder' => 'Введите имя спортсмена']) ?>

    <?= $form->field($model, 'razryad')->textInput(['placeholder' => 'Введите разряд']) ?>

    <?= $form->field($model, 'id_sport_club')->dropDownList(
        SportClub::find()->select(['name', 'id'])->indexBy('id')->column(),
        ['prompt' => 'Выберите спортивный клуб']
    ) ?>

    <div class="form-group">
        <?= Html::submitButton('Поиск', ['class' => 'btn btn-primary']) ?>
        <?= Html::resetButton('Сброс', ['class' => 'btn btn-outline-secondary']) ?>
    </div>

    <?php ActiveForm::end(); ?>

</div>
```
_form.php:
```
<?php

use yii\helpers\Html;
use yii\widgets\ActiveForm;
use app\models\SportClub;

/** @var yii\web\View $this */
/** @var app\models\Sportsmen $model */
/** @var yii\widgets\ActiveForm $form */
?>

<div class="sportsmen-form">

    <?php $form = ActiveForm::begin(); ?>

    <?= $form->field($model, 'name')->textInput(['maxlength' => true, 'placeholder' => 'Введите имя спортсмена']) ?>

    <?= $form->field($model, 'razryad')->textInput(['maxlength' => true, 'placeholder' => 'Введите разряд']) ?>

    <?= $form->field($model, 'id_sport_club')->dropDownList(
        SportClub::find()->select(['name', 'id'])->indexBy('id')->column(),
        ['prompt' => 'Выберите спортивный клуб']
    ) ?>

    <div class="form-group">
        <?= Html::submitButton($model->isNewRecord ? 'Создать' : 'Обновить', ['class' => $model->isNewRecord ? 'btn btn-success' : 'btn btn-primary']) ?>
    </div>

    <?php ActiveForm::end(); ?>

</div>
```