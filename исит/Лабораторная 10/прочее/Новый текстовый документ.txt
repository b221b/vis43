Постройте модель полиномиальной регрессии с использованием. Проанализируйте кривые аппроксимации при различных степенях полинома.

```
# Подключение библиотек
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

# Загрузка данных
dataset = pd.read_csv('iris.data', header=None)
dataset.columns = ['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth', 'Species']

# Выбор признаков и зависимой переменной
X = dataset[['SepalLength', 'SepalWidth']].values  # Выбираем два признака
y = dataset['PetalLength'].values  # Зависимая переменная

# Обучение линейной модели
lin_reg = LinearRegression()
lin_reg.fit(X, y)

# Обучение полиномиальной модели
degree = 2  # Измените степень полинома для анализа
poly_reg = PolynomialFeatures(degree=degree)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

# Предсказание
y_pred_lin = lin_reg.predict(X)
y_pred_poly = lin_reg_2.predict(X_poly)

# Визуализация результатов
# Для визуализации полиномиальной регрессии мы будем использовать только два признака
plt.scatter(X[:, 0], y, color='red', label='Actual Data')  # SepalLength vs PetalLength
plt.scatter(X[:, 0], y_pred_lin, color='blue', label='Linear Prediction')
plt.scatter(X[:, 0], y_pred_poly, color='green', label='Polynomial Prediction')
plt.title(f'Truth or Bluff (Polynomial Regression, Degree = {degree})')
plt.xlabel('Sepal Length')
plt.ylabel('Petal Length')
plt.legend()
plt.show()

# Анализ кривых аппроксимации при различных степенях полинома
degrees = [1, 2, 3, 4, 5]  # Различные степени полинома для анализа
plt.figure(figsize=(15, 10))

for i, degree in enumerate(degrees):
    poly_reg = PolynomialFeatures(degree=degree)
    X_poly = poly_reg.fit_transform(X)
    lin_reg_2 = LinearRegression()
    lin_reg_2.fit(X_poly, y)
    
    plt.subplot(2, 3, i + 1)
    plt.scatter(X[:, 0], y, color='red', label='Actual Data')
    plt.scatter(X[:, 0], lin_reg_2.predict(X_poly), color='green', label='Polynomial Prediction')
    plt.title(f'Polynomial Regression (Degree = {degree})')
    plt.xlabel('Sepal Length')
    plt.ylabel('Petal Length')
    plt.legend()

plt.tight_layout()
plt.show()

```